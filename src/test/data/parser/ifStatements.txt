FILE
  PascalSimpleNode(PROGRAM_HEADER)
    PsiElement(PascalTokenType.PROGRAM)('program')
    PsiWhiteSpace(' ')
    PascalSimpleNode(IDENTIFIER)
      PsiElement(PascalTokenType.IDENTIFIER)('Test')
  PsiElement(PascalTokenType.SEMI)(';')
  PsiWhiteSpace('\n')
  PascalSimpleNode(BLOCK)
    PascalSimpleNode(DECLARATION)
      PascalSimpleNode(VARIABLES)
        PsiElement(PascalTokenType.VAR)('var')
        PsiWhiteSpace('\n  ')
        PascalSimpleNode(VARIABLE_DECLARATION)
          PascalSimpleNode(IDENTIFIER)
            PsiElement(PascalTokenType.IDENTIFIER)('a')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.COLON)(':')
          PsiWhiteSpace(' ')
          PascalSimpleNode(TYPE)
            PsiElement(PascalTokenType.INTEGER)('integer')
        PsiElement(PascalTokenType.SEMI)(';')
        PsiWhiteSpace('\n  ')
        PascalSimpleNode(VARIABLE_DECLARATION)
          PascalSimpleNode(IDENTIFIER)
            PsiElement(PascalTokenType.IDENTIFIER)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.COLON)(':')
          PsiWhiteSpace(' ')
          PascalSimpleNode(TYPE)
            PsiElement(PascalTokenType.INTEGER)('integer')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.EQ)('=')
          PsiWhiteSpace(' ')
          PascalSimpleNode(EXPRESSION)
            PascalSimpleNode(SIMPLE_EXPRESSION)
              PascalSimpleNode(TERM)
                PascalSimpleNode(FACTOR)
                  PascalSimpleNode(UNSIGNED_CONSTANT)
                    PsiElement(PascalTokenType.NUMBER INT)('123')
        PsiElement(PascalTokenType.SEMI)(';')
    PsiWhiteSpace('\n\n')
    PascalSimpleNode(COMPOUND_STATEMENT)
      PsiElement(PascalTokenType.BEGIN)('begin')
      PsiWhiteSpace('\n  ')
      PascalSimpleNode(ASSIGNMENT_STATEMENT)
        PascalSimpleNode(IDENTIFIER)
          PsiElement(PascalTokenType.IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PascalSimpleNode(ASSIGNMENT_OPERATOR)
          PsiElement(PascalTokenType.ASSIGN)(':=')
        PsiWhiteSpace(' ')
        PascalSimpleNode(EXPRESSION)
          PascalSimpleNode(SIMPLE_EXPRESSION)
            PascalSimpleNode(TERM)
              PascalSimpleNode(FACTOR)
                PascalSimpleNode(UNSIGNED_CONSTANT)
                  PsiElement(PascalTokenType.NUMBER INT)('100')
      PsiElement(PascalTokenType.SEMI)(';')
      PsiWhiteSpace('\n  ')
      PascalSimpleNode(STRUCTURED_STATEMENT)
        PascalSimpleNode(IF_STATEMENT)
          PsiElement(PascalTokenType.IF)('if')
          PsiWhiteSpace(' ')
          PascalSimpleNode(EXPRESSION)
            PascalSimpleNode(SIMPLE_EXPRESSION)
              PascalSimpleNode(TERM)
                PascalSimpleNode(FACTOR)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalSimpleNode(EXPRESSION)
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PsiElement(PascalTokenType.IDENTIFIER)('a')
                    PsiWhiteSpace(' ')
                    PascalSimpleNode(RELATIONAL_OPERATOR)
                      PsiElement(PascalTokenType.LT)('<')
                    PsiWhiteSpace(' ')
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PascalSimpleNode(UNSIGNED_CONSTANT)
                            PsiElement(PascalTokenType.NUMBER INT)('20')
                  PsiWhiteSpace(' ')
                  PsiElement(PascalTokenType.RPAREN)(')')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.THEN)('then')
          PsiWhiteSpace('\n    ')
          PascalSimpleNode(PROCEDURE_CALL_STATEMENT)
            PascalSimpleNode(IDENTIFIER)
              PsiElement(PascalTokenType.IDENTIFIER)('writeln')
            PascalSimpleNode(PROCEDURE_ACTUAL_PARAMETERS)
              PsiElement(PascalTokenType.LPAREN)('(')
              PascalSimpleNode(EXPRESSION)
                PascalSimpleNode(SIMPLE_EXPRESSION)
                  PascalSimpleNode(TERM)
                    PascalSimpleNode(FACTOR)
                      PascalSimpleNode(UNSIGNED_CONSTANT)
                        PsiElement(PascalTokenType.STRING)(''a is less than 20'')
              PsiWhiteSpace(' ')
              PsiElement(PascalTokenType.RPAREN)(')')
          PsiWhiteSpace('\n  ')
          PascalSimpleNode(ELSE)
            PsiElement(PascalTokenType.ELSE)('else')
            PsiWhiteSpace('\n    ')
            PascalSimpleNode(PROCEDURE_CALL_STATEMENT)
              PascalSimpleNode(IDENTIFIER)
                PsiElement(PascalTokenType.IDENTIFIER)('writeln')
              PascalSimpleNode(PROCEDURE_ACTUAL_PARAMETERS)
                PsiElement(PascalTokenType.LPAREN)('(')
                PascalSimpleNode(EXPRESSION)
                  PascalSimpleNode(SIMPLE_EXPRESSION)
                    PascalSimpleNode(TERM)
                      PascalSimpleNode(FACTOR)
                        PascalSimpleNode(UNSIGNED_CONSTANT)
                          PsiElement(PascalTokenType.STRING)(''a is not less than 20'')
                PsiWhiteSpace(' ')
                PsiElement(PascalTokenType.RPAREN)(')')
      PsiElement(PascalTokenType.SEMI)(';')
      PsiWhiteSpace('\n\n  ')
      PascalSimpleNode(STRUCTURED_STATEMENT)
        PascalSimpleNode(IF_STATEMENT)
          PsiElement(PascalTokenType.IF)('if')
          PsiWhiteSpace(' ')
          PascalSimpleNode(EXPRESSION)
            PascalSimpleNode(SIMPLE_EXPRESSION)
              PascalSimpleNode(TERM)
                PascalSimpleNode(FACTOR)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalSimpleNode(EXPRESSION)
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PsiElement(PascalTokenType.IDENTIFIER)('b')
                    PsiWhiteSpace(' ')
                    PascalSimpleNode(RELATIONAL_OPERATOR)
                      PsiElement(PascalTokenType.EQ)('=')
                    PsiWhiteSpace(' ')
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PascalSimpleNode(UNSIGNED_CONSTANT)
                            PsiElement(PascalTokenType.NUMBER INT)('123')
                  PsiElement(PascalTokenType.RPAREN)(')')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.THEN)('then')
          PsiWhiteSpace('\n    ')
          PascalSimpleNode(STRUCTURED_STATEMENT)
            PascalSimpleNode(COMPOUND_STATEMENT)
              PsiElement(PascalTokenType.BEGIN)('begin')
              PsiWhiteSpace('\n    ')
              PascalSimpleNode(STRUCTURED_STATEMENT)
                PascalSimpleNode(IF_STATEMENT)
                  PsiElement(PascalTokenType.IF)('if')
                  PsiWhiteSpace(' ')
                  PascalSimpleNode(EXPRESSION)
                    PascalSimpleNode(SIMPLE_EXPRESSION)
                      PascalSimpleNode(TERM)
                        PascalSimpleNode(FACTOR)
                          PsiElement(PascalTokenType.LPAREN)('(')
                          PascalSimpleNode(EXPRESSION)
                            PascalSimpleNode(SIMPLE_EXPRESSION)
                              PascalSimpleNode(TERM)
                                PascalSimpleNode(FACTOR)
                                  PsiElement(PascalTokenType.IDENTIFIER)('a')
                            PsiWhiteSpace(' ')
                            PascalSimpleNode(RELATIONAL_OPERATOR)
                              PsiElement(PascalTokenType.LT)('<')
                            PsiWhiteSpace(' ')
                            PascalSimpleNode(SIMPLE_EXPRESSION)
                              PascalSimpleNode(TERM)
                                PascalSimpleNode(FACTOR)
                                  PascalSimpleNode(UNSIGNED_CONSTANT)
                                    PsiElement(PascalTokenType.NUMBER INT)('20')
                          PsiWhiteSpace(' ')
                          PsiElement(PascalTokenType.RPAREN)(')')
                  PsiWhiteSpace(' ')
                  PsiElement(PascalTokenType.THEN)('then')
                  PsiWhiteSpace('\n      ')
                  PascalSimpleNode(PROCEDURE_CALL_STATEMENT)
                    PascalSimpleNode(IDENTIFIER)
                      PsiElement(PascalTokenType.IDENTIFIER)('writeln')
                    PascalSimpleNode(PROCEDURE_ACTUAL_PARAMETERS)
                      PsiElement(PascalTokenType.LPAREN)('(')
                      PascalSimpleNode(EXPRESSION)
                        PascalSimpleNode(SIMPLE_EXPRESSION)
                          PascalSimpleNode(TERM)
                            PascalSimpleNode(FACTOR)
                              PascalSimpleNode(UNSIGNED_CONSTANT)
                                PsiElement(PascalTokenType.STRING)(''a is less than 20'')
                      PsiWhiteSpace(' ')
                      PsiElement(PascalTokenType.RPAREN)(')')
                  PsiWhiteSpace('\n    ')
                  PascalSimpleNode(ELSE)
                    PsiElement(PascalTokenType.ELSE)('else')
                    PsiWhiteSpace('\n      ')
                    PascalSimpleNode(PROCEDURE_CALL_STATEMENT)
                      PascalSimpleNode(IDENTIFIER)
                        PsiElement(PascalTokenType.IDENTIFIER)('writeln')
                      PascalSimpleNode(PROCEDURE_ACTUAL_PARAMETERS)
                        PsiElement(PascalTokenType.LPAREN)('(')
                        PascalSimpleNode(EXPRESSION)
                          PascalSimpleNode(SIMPLE_EXPRESSION)
                            PascalSimpleNode(TERM)
                              PascalSimpleNode(FACTOR)
                                PascalSimpleNode(UNSIGNED_CONSTANT)
                                  PsiElement(PascalTokenType.STRING)(''a is not less than 20'')
                        PsiWhiteSpace(' ')
                        PsiElement(PascalTokenType.RPAREN)(')')
              PsiElement(PascalTokenType.SEMI)(';')
              PsiWhiteSpace('\n    ')
              PsiElement(PascalTokenType.END)('end')
          PsiElement(PascalTokenType.SEMI)(';')
          PsiWhiteSpace('\n  ')
          PascalSimpleNode(ELSE)
            PsiElement(PascalTokenType.ELSE)('else')
            PsiWhiteSpace('\n    ')
            PascalSimpleNode(PROCEDURE_CALL_STATEMENT)
              PascalSimpleNode(IDENTIFIER)
                PsiElement(PascalTokenType.IDENTIFIER)('writeln')
              PascalSimpleNode(PROCEDURE_ACTUAL_PARAMETERS)
                PsiElement(PascalTokenType.LPAREN)('(')
                PascalSimpleNode(EXPRESSION)
                  PascalSimpleNode(SIMPLE_EXPRESSION)
                    PascalSimpleNode(TERM)
                      PascalSimpleNode(FACTOR)
                        PascalSimpleNode(UNSIGNED_CONSTANT)
                          PsiElement(PascalTokenType.STRING)(''Hello World'')
                PsiWhiteSpace(' ')
                PsiElement(PascalTokenType.RPAREN)(')')
      PsiElement(PascalTokenType.SEMI)(';')
      PsiWhiteSpace('\n\n')
      PsiElement(PascalTokenType.END)('end')
  PsiElement(PascalTokenType.DOT)('.')